<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Queue\QueueFactory;
use Drupal\Core\Queue\QueueInterface;

/**
* @file
* A description of what your module does.
*/
function omdb_views_data() {
    $data = [];
    $data['omdb_profile']['table']['group'] = t('omdb profile');
    $data['omdb_profile']['table']['base'] = [
        'title'     => t('Omdb profile'),
        'help'      => t('Omdb profile data provided by the Fitbit API\'s User Profile endpoint.'),
        'query_id'  => 'omdb',
    ];

    $data['omdb_profile']['title'] = [
      'type' => 'textfield',
      'title'  => t('Title'),
      'help'   => t('Title:'),
      'field'  => [
        'id'    => 'api_title',
      ],
      'argument' => [
        'id'      => 'api_title_argument'
      ]
    ];

    $data['omdb_profile']['id'] = [
      'type' => 'string',
      'title'  => t('Id'),
      'help'   => t('Some id'),
      'field'  => [
        'id'    => 'api_id',
      ],
      'argument' => [
        'id'      => 'api_id_argument'
      ]
    ];

    $data['omdb_profile']['name'] = [
      'type' => 'textfield',
      'title'   => t('Name'),
      'help'    => t('Name:'),
      'field'   => [
        'id'      => 'api_name',
      ],
      'argument' => [
        'id'      => 'api_name_argument'
      ]
    ];

    $data['omdb_profile']['poster_path'] = [
      'type'    => 'image',
      'title'   => t('Image'),
      'help'    => t('Image poster'),
      'field'   => [
        'id'      => 'api_image',
      ],
      'argument' => [
        'id'      => 'api_image_argument'
      ]
    ];

    $data['omdb_profile']['nodes_titles'] = [
      'type' => 'textfield',
      'title'     => t('Node titles'),
      'filter'    => [
        'title'     => t('Node titles'),
        'help'      => t('Specify a list of titles a node can have.'),
        'field'     => 'title',
        'id'        => 'api_node_titles'
      ],
    ];

    $data['omdb_profile']['release_date'] = [
      'type' => 'string',
      'title'   => t('Release date'),
      'field'   => [
        'id'      => 'api_release_date'
      ],
      'filter'  => [
        'title'   => t('Release date'),
        'help'    => t('Specify a list of release date a node can have.'),
        'field'   => 'release_date',
        'id'      => 'api_release_date_filter',
      ],
      'argument' => [
        'id'      => 'api_release_date_arg'
      ],
    ];

    $data['omdb_profile']['page'] = [
      'type' => 'string',
      'title'   => t('Page'),
      'help'    => t('Page'),
      'field'   => [
        'id'      => 'api_page',
      ],
    ];
  return $data;
}

function omdb_cron() {
  /** @var QueueFactory $queue_factory */
  $queue_factory = \Drupal::service('queue');
  $queue = $queue_factory->get('omdb_import');
  $item = new \stdClass();
  $item->line = \Drupal::config('omdb.settings')->get('line');
  $queue->createItem($item);
  \Drupal::configFactory()->getEditable('omdb.settings')->set('line', $item->line+1)->save();
}

function omdb_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $entity_type_id = $entity->getEntityTypeId();
  if ($entity_type_id == 'node') {
//    dsm($display);

  }
}

function omdb_preprocess_node(&$variables) {
  dsm('prep');
}
